/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}


/* Stying Starts */
html {
  font-family: 'Open Sans', sans-serif;
  box-sizing: border-box;
}

body {
  background-color: #60a9ff;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  /* ViewPort - visible area in webpage */
}

.panel {
  background-color: white;
  border-radius: 10px;

  padding: 15px 25px;
  width: 100%;
  max-width: 960px;

  display: flex;
  flex-direction: column;

  text-align: center;
  /*Align Contents within selected div HORIZONTALLY*/
  text-transform: uppercase;
}

.pricing-plan {
  border-bottom: 1px solid #e1f1ff;
}

.pricing-plan:last-child {
  /* Last div will not have border at bottom*/
  border-bottom: none;
}

.pricing-img {
  margin-bottom: 25px;
  width: 100%;
  max-width: 100%;
}

.pricing-header {
  color: #888;
  font-weight: 600;
  letter-spacing: 1px;
}

.pricing-features {
  margin: 50px 0 25px;
  color: #016ff9;
}

.pricing-features-item {
  font-weight: 600;
  letter-spacing: 1px;
  font-size: 12px;
  line-height: 1.5;
  padding: 15px 0;
  border-top: 1px solid #e1f1ff;
}

.pricing-features-item:last-child {
  border-bottom: 1px solid #e1f1ff;
}

.pricing-price {
  color: #016ff9;
  display: block;
  font-size: 32px;
  font-weight: 700;
}

.pricing-button {
  border: 1px solid #9dd1ff;
  border-radius: 10px;
  color: #348efe;
  display: inline-block;
  padding: 15px 25px;
  text-decoration: none;
  margin: 25px 0;
  transition: background-color 200ms ease-in-out;
}

.pricing-button:hover,
.pricing-button:focus {
  background-color: #e1f1ff;
}

.pricing-button.is-featured {
  background-color: #48aaff;
  color: white;
}

.pricing-button.is-featured:hover,
.pricing-button.is-featured:focus {
  background-color: #269aff;
  color: white;
}

@media (min-width: 900px) {
  .panel {
    flex-direction: row;
  }

  .pricing-plan {
    border-bottom: none;
    border-right: 1px solid #e1f1ff;
    padding: 25px 50px;
  }

  .pricing-plan:last-child {
    border-right: none;
  }

}

/* Image will not flow out of containing container if container shrinks */

/* 
  Here is the difference between height, min-height and max-height:

  When you set the height property on an element, the element will occupy the mentioned space irrespective of the content. In this case, if the content is more than the mentioned height then it overflows.
  
  With min-height property we can set a minimum height for the element to occupy if the content in the element is less than that and the height of the element will increase when the content increases.
  
  With max-height we are setting the maximum height for the element. So if the element's content has less than that height it will be occupy according with the content and once it reaches the max-height mentioned it Content will restrict and scroll bar appears.
  
  The same thing applies to width, min-width and max-width properties as well.
  
  When you set the width property on an element, the element will occupy the mentioned space irrespective of the content. In this case, if the content is more than the mentioned height then it overflows.
  
  With min-width property we can set a minimum width for the element to occupy if the content in the element is less than that and the width of the element will increase when the content increases.
  
  With max-width we are setting the maximum width for the element. So if the element's content has less than that width it will be occupy according with the content and once it reaches the max-width mentioned it Content will restrict and scroll bar appears.   */